class Queue:
    def __init__(self, size):
        self.a = [None] * size
        self.front = 0
        self.rear = -1
        self.size = size
        self.count = 0

    def enqueue(self, value):
        if self.count >= self.size:
            print("Queue Overflow")
        else:
            self.rear = (self.rear + 1) % self.size
            self.a[self.rear] = value
            self.count += 1

    def dequeue(self):
        if self.count == 0:
            print("Queue Underflow")
        else:
            value = self.a[self.front]
            self.front = (self.front + 1) % self.size
            self.count -= 1
            return value

    def front_value(self):
        if self.count == 0:
            print("Queue is empty")
        else:
            return self.a[self.front]

    def display(self):
        if self.count == 0:
            print("Queue is empty")
        else:
            i = self.front
            for _ in range(self.count):
                print(self.a[i], end=" ")
                i = (i + 1) % self.size
            print()

# User interaction
size = int(input("Enter the size of the queue: "))
queue = Queue(size)

while True:
    print("\n1. Enqueue\n2. Dequeue\n3. Front\n4. Display\n5. Exit")
    choice = int(input("Enter your choice: "))

    if choice == 1:
        value = int(input("Enter value to enqueue: "))
        queue.enqueue(value)
    elif choice == 2:
        print("Dequeued:", queue.dequeue())
    elif choice == 3:
        print("Front:", queue.front_value())
    elif choice == 4:
        queue.display()
    elif choice == 5:
        break
    else:
        print("Invalid choice. Please try again.")
