import java.util.Scanner;

class Node {
    int data;
    Node next;

    Node(int value) {
        data = value;
        next = null;
    }
}

class CLL {
    Node head;

    CLL() {
        head = null;
    }

    void create(int value) {
        Node newNode = new Node(value);
        if (head == null) {
            head = newNode;
            newNode.next = head;
        } else {
            Node temp = head;
            while (temp.next != head) {
                temp = temp.next;
            }
            temp.next = newNode;
            newNode.next = head;
        }
    }

    void insertAtBeginning(int value) {
        Node newNode = new Node(value);
        if (head == null) {
            head = newNode;
            newNode.next = head;
        } else {
            Node temp = head;
            while (temp.next != head) {
                temp = temp.next;
            }
            temp.next = newNode;
            newNode.next = head;
            head = newNode;
        }
    }

    void insertBefore(int value, int element) {
        if (head == null) {
            System.out.println("The list is empty.");
            return;
        }

        Node newNode = new Node(value);
        Node temp = head;

        if (head.data == element) {
            while (temp.next != head) {
                temp = temp.next;
            }
            temp.next = newNode;
            newNode.next = head;
            head = newNode;
            return;
        }

        Node prev = null;
        while (temp.next != head && temp.data != element) {
            prev = temp;
            temp = temp.next;
        }

        if (temp.data == element) {
            prev.next = newNode;
            newNode.next = temp;
        } else {
            System.out.println("Element not found.");
        }
    }

    void insertAfter(int value, int element) {
        if (head == null) {
            System.out.println("The list is empty.");
            return;
        }

        Node newNode = new Node(value);
        Node temp = head;
        while (temp.next != head && temp.data != element) {
            temp = temp.next;
        }

        if (temp.data == element) {
            newNode.next = temp.next;
            temp.next = newNode;
        } else {
            System.out.println("Element not found.");
        }
    }

    void insertAtEnd(int value) {
        Node newNode = new Node(value);
        if (head == null) {
            head = newNode;
            newNode.next = head;
        } else {
            Node temp = head;
            while (temp.next != head) {
                temp = temp.next;
            }
            temp.next = newNode;
            newNode.next = head;
        }
    }

    void deleteAtFirst() {
        if (head == null) {
            System.out.println("The list is empty.");
            return;
        }

        if (head.next == head) {
            head = null;
        } else {
            Node temp = head;
            while (temp.next != head) {
                temp = temp.next;
            }
            temp.next = head.next;
            head = temp.next;
        }
    }

    void deleteAtSpecified(int value) {
        if (head == null) {
            System.out.println("The list is empty.");
            return;
        }

        if (head.data == value && head.next == head) {
            head = null;
            return;
        }

        Node temp = head;
        Node prev = null;
        while (temp.next != head && temp.data != value) {
            prev = temp;
            temp = temp.next;
        }

        if (temp.data == value) {
            if (temp == head) {
                while (temp.next != head) {
                    temp = temp.next;
                }
                temp.next = head.next;
                head = head.next;
            } else {
                prev.next = temp.next;
            }
        } else {
            System.out.println("Element not found.");
        }
    }

    void deleteAtLast() {
        if (head == null) {
            System.out.println("The list is empty.");
            return;
        }

        if (head.next == head) {
            head = null;
            return;
        }

        Node temp = head;
        Node prev = null;
        while (temp.next != head) {
            prev = temp;
            temp = temp.next;
        }
        prev.next = head;
    }

    boolean find(int value) {
        if (head == null) {
            System.out.println("The list is empty.");
            return false;
        }

        Node temp = head;
        do {
            if (temp.data == value) {
                return true;
            }
            temp = temp.next;
        } while (temp != head);
        return false;
    }

    void display() {
        if (head == null) {
            System.out.println("The list is empty.");
            return;
        }
        Node temp = head;
        do {
            System.out.print(temp.data + " ");
            temp = temp.next;
        } while (temp != head);
        System.out.println();
    }

    public static void main(String[] args) {
        CLL cll = new CLL();
        Scanner sc = new Scanner(System.in);
        while (true) {
            System.out.println("1. Create the list \n2. Insert at beginning \n3. Insert before element \n4. Insert after element \n5. Insert at end \n6. Display the list \n7. Delete first element \n8. Delete specified element \n9. Delete last element \n10. Find element \n11. Exit");
            int choice = sc.nextInt();
            if (choice == 1) {
                System.out.println("Enter the element: ");
                int value = sc.nextInt();
                cll.create(value);
            } else if (choice == 2) {
                System.out.println("Enter the value to insert at beginning: ");
                int value = sc.nextInt();
                cll.insertAtBeginning(value);
            } else if (choice == 3) {
                System.out.println("Enter the value to insert: ");
                int value = sc.nextInt();
                System.out.println("Enter the element before which to insert: ");
                int element = sc.nextInt();
                cll.insertBefore(value, element);
            } else if (choice == 4) {
                System.out.println("Enter the value to insert: ");
                int value = sc.nextInt();
                System.out.println("Enter the element after which to insert: ");
                int element = sc.nextInt();
                cll.insertAfter(value, element);
            } else if (choice == 5) {
                System.out.println("Enter the value to insert at end: ");
                int value = sc.nextInt();
                cll.insertAtEnd(value);
            } else if (choice == 6) {
                cll.display();
            } else if (choice == 7) {
                cll.deleteAtFirst();
            } else if (choice == 8) {
                System.out.println("Enter the value to delete: ");
                int value = sc.nextInt();
                cll.deleteAtSpecified(value);
            } else if (choice == 9) {
                cll.deleteAtLast();
            } else if (choice == 10) {
                System.out.println("Enter the value to find: ");
                int value = sc.nextInt();
                if (cll.find(value)) {
                    System.out.println("Element found.");
                } else {
                    System.out.println("Element not found.");
                }
            } else if (choice == 11) {
                break;
            }
        }
        sc.close();
    }
}
